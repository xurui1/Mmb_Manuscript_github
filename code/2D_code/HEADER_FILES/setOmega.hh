/*
  In this function, we will initialize the omega fields
*/
void setOmega( ){

  int i, j, chain,ii,jj;
  double epsln=0.1;
  double p_ABC, p_DE, p_F;

  // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  std::ifstream infile;
  if(Bilayer==1){infile.open("./OMEGA/READ/phi_bilayer_64_64.dat");}
  if(Pore==1){infile.open("./OMEGA/READ/phi_pore_64_64.dat");}
  if(Pore==1){infile.open("./OMEGA/READ/phi_disk_64_64.dat");}
  if(LamPar==1){infile.open("./OMEGA/READ/phi_LamPar_64_64.dat");}
  if(LamPer==1){infile.open("./OMEGA/READ/phi_LamPer_64_64.dat");}
  for(i=0;i<NBox;i++){
    for(j=0;j<NBox;j++){
      infile >> phi[0][i][j] >> phi[1][i][j] >> phi[2][i][j] >> phi[3][i][j] >> phi[4][i][j] >> phi[5][i][j];
    }
  }
  infile.close();
  // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++  
  // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  for(i=0;i<NBox;i++){
    for(j=0;j<NBox;j++){
      for(ii=0;ii<ChainType;ii++){
	w[ii][i][j]=0.0;
	for(jj=0;jj<ChainType;jj++){  
	  w[ii][i][j]+=chiMatrix[ii][jj]*phi[jj][i][j];
	}
      }
    }
  }
  // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  
  return;

};


















 
